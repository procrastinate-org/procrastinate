name: CI

on:
  pull_request:
  push:
    branches:
      - 'main'
    tags:
      - '*'

jobs:
  build:

    strategy:
      matrix:
        include:
          - python_version: "3.7"
            script: tests
          - python_version: "3.8"
            script: tests
          - python_version: "3.9"
            script: tests
          - python_version: "3.10"
            script: tests

    name: "py${{ matrix.python_version }} / ${{ matrix.script }}"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        # Set health checks to wait until postgres has started
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}

      - name: Pip, Pre-commit & Poetry caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/
          key: ${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install Dev dependencies
        run: poetry install --extras "django sqlalchemy"

      - name: Run ${{ matrix.script }}
        run: scripts/${{ matrix.script }}
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python_version }}"
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres

      - name: Store coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.${{ matrix.python_version }}

  report-status:
    name: success
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Report success
        run: echo 'Success !'

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: 'coverage'

      - name: Display coverage
        uses: ewjoachim/python-coverage-comment-action@v2
        with:
          MERGE_COVERAGE_FILES: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
